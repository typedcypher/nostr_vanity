name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-24.04
            name: nostr_vanity-x86_64-unknown-linux-gnu.tar.gz
            use_cross: true
          - target: x86_64-unknown-linux-musl
            os: ubuntu-24.04
            name: nostr_vanity-x86_64-unknown-linux-musl.tar.gz
            use_cross: true
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-24.04
            name: nostr_vanity-aarch64-unknown-linux-gnu.tar.gz
            use_cross: true
          - target: aarch64-unknown-linux-musl
            os: ubuntu-24.04
            name: nostr_vanity-aarch64-unknown-linux-musl.tar.gz
            use_cross: true
          - target: x86_64-apple-darwin
            os: macos-latest
            name: nostr_vanity-x86_64-apple-darwin.tar.gz
            use_cross: false
          - target: aarch64-apple-darwin
            os: macos-latest
            name: nostr_vanity-aarch64-apple-darwin.tar.gz
            use_cross: false
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: nostr_vanity-x86_64-pc-windows-msvc.zip
            use_cross: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Setup Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}

      - name: Install cross
        if: matrix.use_cross == true
        run: |
          cargo install cross --git https://github.com/cross-rs/cross

      - name: Build binary (cross)
        if: matrix.use_cross == true
        run: cross build --verbose --locked --release --target ${{ matrix.target }}

      - name: Build binary (native)
        if: matrix.use_cross == false
        run: cargo build --verbose --locked --release --target ${{ matrix.target }}

      - name: Package binary (Unix)
        if: runner.os != 'Windows'
        run: |
          cd target/${{ matrix.target }}/release
          if [[ "${{ runner.os }}" == "macOS" ]]; then
            tar czvf ../../../${{ matrix.name }} nostr_vanity
          else
            tar czvf ../../../${{ matrix.name }} nostr_vanity
          fi
          cd -

      - name: Package binary (Windows)
        if: runner.os == 'Windows'
        run: |
          cd target/${{ matrix.target }}/release
          7z a ../../../${{ matrix.name }} nostr_vanity.exe
          cd -

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: ${{ matrix.name }}

  release:
    name: Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create checksums
        run: |
          cd artifacts
          find . -name "*.tar.gz" -o -name "*.zip" | while read file; do
            if [ -f "$file" ]; then
              sha256sum "$file" >> ../checksums.txt
            fi
          done
          cd ..

      - name: Generate changelog
        id: changelog
        run: |
          # Get the tag name
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          
          # Generate changelog from git commits since last tag
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -n "$PREV_TAG" ]; then
            echo "## Changes since $PREV_TAG" > changelog.md
            git log --pretty=format:"- %s (%h)" $PREV_TAG..HEAD >> changelog.md
          else
            echo "## Initial Release" > changelog.md
            echo "First release of nostr_vanity - a fast Nostr vanity npub address generator." >> changelog.md
          fi
          
          echo "" >> changelog.md
          echo "## Assets" >> changelog.md
          echo "" >> changelog.md
          echo "Download the appropriate binary for your platform:" >> changelog.md
          echo "" >> changelog.md
          
          cd artifacts
          find . -name "*.tar.gz" -o -name "*.zip" | sort | while read file; do
            filename=$(basename "$file")
            if [[ "$filename" == *"linux-gnu"* ]]; then
              platform="Linux (GNU)"
            elif [[ "$filename" == *"linux-musl"* ]]; then
              platform="Linux (musl)"
            elif [[ "$filename" == *"apple-darwin"* ]]; then
              platform="macOS"
            elif [[ "$filename" == *"windows"* ]]; then
              platform="Windows"
            else
              platform="Unknown"
            fi
            
            if [[ "$filename" == *"x86_64"* ]]; then
              arch="x86_64"
            elif [[ "$filename" == *"aarch64"* ]]; then
              arch="ARM64"
            else
              arch="Unknown"
            fi
            
            echo "- **$platform ($arch)**: \`$filename\`" >> ../changelog.md
          done

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.changelog.outputs.tag_name }}
          name: Release ${{ steps.changelog.outputs.tag_name }}
          body_path: changelog.md
          files: |
            artifacts/**/*.tar.gz
            artifacts/**/*.zip
            checksums.txt
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}